@model IYFD.Models.User

@{
    ViewBag.Title = "Register";
}

<h2>Create a New Account</h2>
<div class="register-message">
    READ THIS FIRST!  
</div>
<div class="register-message">
	Welcome to In Your Face Disgrace XXXIII.  If this is your first visit, please register as a player in the tournament.  Type in your "player name" into the USERNAME field.  Enter your real name and email address... and create a password, then click REGISTER.  (Passwords must contain at least six characters.)
</div>
<div class="register-message">
	Then, anytime you want to make picks for upcoming games, click the "MAKE YOUR PICKS" button at the top of the main page.
</div>
<div class="register-message">
	You can make picks and change them all you want until 11 a.m. on game days. After that, your picks cannot be submitted.
</div>
<div class="register-message">
	 Don't forget to click "SUBMIT" to enter picks at any time.
</div>
<div class="register-message">
	When you re-enter the site throughout the tournament you will need to click on "ENTER THE TOURNAMENT" again on the home page and go from there. 
</div>
<div class="register-message">
	When you get a chance ... check out the LEADERBOARD, the "Legends" page with all previous IYFD winners and last year's final standings.
</div>
<div class="register-message">
	ALL THE FOLKS AT ROWENA GUNS THANK FOR PARTICIPATING and THEY ASK YOU TO SEND IN YOUR ENTRY FEE TODAY. 
</div>
<p>
    Passwords are required to be a minimum of 6 characters in length.
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Account Information</legend>

            <div class="editor-label">
                @Html.LabelFor(m => m.Username)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Username)
                @Html.ValidationMessageFor(m => m.Username)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.FirstName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FirstName)
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName)
                @Html.ValidationMessageFor(m => m.LastName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>

            <p>
                <input type="submit" value="Register" />
            </p>
            @if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
            {
                <div>
                    @Html.Raw(ViewBag.ErrorMessage);
                </div>
            }
        </fieldset>
    </div>
}
